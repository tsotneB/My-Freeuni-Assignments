/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-08-18 18:34:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.Views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import Models.DAO.CourierDAO;
import Models.DAO.ManagerDAO;
import Models.DAO.DishDAO;
import Models.*;
import Models.DAO.RestaurantDAO;

public final class AdminPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel = \"stylesheet\" href = \"../../Resources/style.css\" />\r\n");
      out.write("    <title>Wolvo</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class = \"adminInfo\">\r\n");
      out.write("    <label>Hello, ");
      out.print(session.getAttribute("name"));
      out.write(' ');
      out.print(session.getAttribute("surname"));
      out.write("!</label> <br>\r\n");
      out.write("    <label>Lets have a look at your profile!</label> <br>\r\n");
      out.write("    <label>User type: ");
      out.print(session.getAttribute("userType"));
      out.write("</label> <br>\r\n");
      out.write("    <label>Your contact info: </label> <br>\r\n");
      out.write("    <label>District: ");
      out.print(((User) session.getAttribute("customer")).getDistrict());
      out.write("</label> <br>\r\n");
      out.write("    <label>Living adress: ");
      out.print(((User) session.getAttribute("customer")).getAddress());
      out.write("</label> <br>\r\n");
      out.write("    <label>Phone number: ");
      out.print(((User) session.getAttribute("customer")).getPhoneNumber());
      out.write("</label>\r\n");
      out.write("</div>\r\n");
      out.write("<div class = \"pendingCouriers\">\r\n");
      out.write("    ");
 List<Courier> pendingCours = ((CourierDAO) application.getAttribute("couriers")).
            getPendingCouriers();
    if (pendingCours.isEmpty()) {
    
      out.write("\r\n");
      out.write("    <label>There are currently no couriers  who  <br>  are waiting for your approval.</label>\r\n");
      out.write("    ");
 }
    else { 
      out.write("\r\n");
      out.write("    <label>List of couriers waiting for your approval: </label> <br>\r\n");
      out.write("    ");
 for (Courier courier : pendingCours) { 
      out.write("\r\n");
      out.write("    <label>Courier ");
      out.print(courier.getFirstName());
      out.write(' ');
      out.print( courier.getLastName());
      out.write("</label><br>\r\n");
      out.write("    <a href=\"approveCourier?id=");
      out.print(courier.getId());
      out.write("\">See Details</a> <br>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"pendingManagers\">\r\n");
      out.write("    ");
 List<Manager> pendingManagers = ((ManagerDAO) application.getAttribute("managers")).
            getPendingManagers();
        if (pendingManagers.isEmpty()) {
    
      out.write("\r\n");
      out.write("    <label>There are currently no managers  who  <br>  are waiting for your approval.</label>\r\n");
      out.write("    ");
 }
    else { 
      out.write("\r\n");
      out.write("    <label>List of Managers waiting for your approval: </label> <br>\r\n");
      out.write("    ");
 for (Manager manager : pendingManagers) { 
      out.write("\r\n");
      out.write("    <label>Manager ");
      out.print(manager.getFirstName());
      out.write(' ');
      out.print( manager.getLastName());
      out.write("</label><br>\r\n");
      out.write("    <a href=\"approveManager?id=");
      out.print(manager.getId());
      out.write("\">See Details</a> <br>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"pendingDishes\">\r\n");
      out.write("    ");
 List<Dish> pendingDishes = ((DishDAO) application.getAttribute("dishes")).
            getPendingDishes();
        if (pendingDishes.isEmpty()) {
    
      out.write("\r\n");
      out.write("    <label>There are currently no dishes <br> waiting for your approval.</label>\r\n");
      out.write("    ");
 }
    else { 
      out.write("\r\n");
      out.write("    <label>List of Dishes waiting for your approval: </label> <br>\r\n");
      out.write("   ");
 for (Dish dish : pendingDishes) { 
      out.write("\r\n");
      out.write("    ");
 Restaurant res = ((RestaurantDAO) application.getAttribute("restaurants")).
            getRestaurantById(dish.getRest_id());
      out.write("\r\n");
      out.write("    <label>Dish name: ");
      out.print(dish.getName());
      out.write("</label><br>\r\n");
      out.write("    <label>Restaurant: ");
      out.print(res.getName());
      out.write("</label><br>\r\n");
      out.write("    <a href=\"approveDish?id=");
      out.print(dish.getDish_id());
      out.write("\">See Details</a> <br>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class = \"searchUsers\">\r\n");
      out.write("    <form action = \"userSearch\" method = \"get\">\r\n");
      out.write("        <input type = \"text\" id = \"searchUser\" name = \"search\" placeholder=\"Look for users by full name\"/> <br> <br>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("<div class = \"logout\">\r\n");
      out.write("    <form action = \"SignOut\" method = \"post\">\r\n");
      out.write("        <input type=\"submit\" value=\"Sign Out\" id = \"SignOut\" name = \"SignOut\"/>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
